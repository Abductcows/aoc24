import itertools
import re

from utils import get_lines, get_input_for_day

from itertools import product

ignored = {(40100695446, 13), (8492543459938, 849), (1885028345241, 96), (1468889, 4), (61750, 3), (243, 8), (36865, 3),
           (659267425, 93), (127371280, 39), (50957095688, 70), (28030320798, 6), (29124036, 9), (341557764, 9),
           (158785, 158), (4289456889, 13), (554985194, 6), (330999480051, 2), (1538904314487, 45), (7849719261, 5),
           (127377474, 682), (67472505, 921), (26644574, 56), (18473082280, 65), (74004676111, 7), (6476010005, 84),
           (91666383, 458), (4061038, 9), (30315690616, 96), (23634778833, 63), (68657, 546), (1112747487, 3),
           (317408907, 34), (1801742, 745), (56997918624, 8), (1053306984885, 2), (32878001008, 474), (92697387347, 5),
           (2422925, 68), (1503929, 6), (5182261, 847), (245765601991, 6), (4360537788, 871), (35692816, 1),
           (8788928203691, 928), (8267833, 3), (3373, 2), (1161681268, 726), (47820659, 882), (3975674943, 9),
           (82706952, 9), (15280317711057, 9), (6447107675, 8), (65653, 6), (6774678492751, 93), (117082131308, 7),
           (3049358, 304), (443234, 346), (22616043, 85), (5329843437, 81), (42524, 38), (614, 4), (58988, 3),
           (708696087, 26), (7617762742, 2), (8398077252, 927), (74843997, 25), (75438, 3), (6108828, 830),
           (13666649464, 4), (7192826701, 719), (112999912772, 386), (1488251, 451), (278569016, 3), (11349864418, 6),
           (108166753, 97), (1335498618, 683), (477945, 795), (7014722, 178), (12470, 5), (2335102, 405), (429333, 429),
           (9504559085, 61), (74072, 4), (60112, 9), (1960099, 49), (4865943, 983), (12775852499, 8), (505281551, 21),
           (4038962686, 4), (18582489633161, 3), (566429, 7), (697604619, 637), (7452250, 836), (3935, 1),
           (16959463031868, 8), (11710716, 3), (886561465, 738), (236998438, 87), (85178494, 1), (6514280, 8),
           (86745899, 8), (1435094135, 6), (531377, 72), (90109404004, 197), (7958, 12), (5958847, 1), (6002747, 307),
           (11120781943, 5), (26827, 3), (587694, 3), (926159, 11), (11474947, 23), (1597626094, 6), (212055356, 4),
           (1441041579, 8), (62397905, 8), (4434190, 9), (71442832127, 283), (6841, 7), (68230285476, 965),
           (3072247, 7), (699306317, 7), (305201845, 2), (129522142, 29), (291084067933, 808), (4298506708, 429),
           (363895954, 4), (249803695, 7), (175419194, 57), (426236880, 25), (231237933, 6), (6189536739, 61),
           (11521, 11), (719823, 74), (138260, 1), (141539, 540), (9554823, 35), (56418844, 64), (1870056, 45),
           (292898224, 1), (2239005590, 7), (20978155, 2), (5899934, 1), (77563305, 3), (5165316, 5), (37356776, 2),
           (2025019412, 67), (192627227, 23), (65897, 5), (248478242497, 814), (157364079, 6), (14162, 72),
           (45194520121, 614), (296528, 40), (35974, 64), (23619914, 2), (45261126, 1), (39883, 87), (43608667105, 1),
           (1324, 368), (234, 1), (3006966, 68), (766041327, 957), (411079725655, 801), (84570, 54), (65750786373, 6),
           (1145351, 996), (15929959, 840), (2016839, 1), (10435, 4), (477406216, 477), (172776, 3), (32460071, 6),
           (950323, 370), (74293495, 6), (3489778, 520), (868855506, 6), (77594401, 9), (760605336747, 92),
           (103790376, 6), (7075218, 568), (42145458, 3), (3156025528, 315), (200827, 19), (3560436481238, 9),
           (164082626, 245), (1065517, 3), (46745101, 29), (47540551, 9), (598260, 75), (285159974, 18), (77414, 75),
           (39291, 54), (5644, 337), (4891, 34), (82880052, 36), (1498, 3), (16137, 3), (462435615, 660), (1512411, 2),
           (390276620, 83), (3230858772, 4), (33611570, 3), (22978, 1), (2821756921, 4), (984792, 984), (321895236, 8),
           (410742307, 853), (2151689, 18), (242319597, 3), (86956594, 564), (22569287, 3), (501974, 1),
           (100474601, 679), (86096525579, 7), (2044046, 379), (11324158, 7), (180559932801, 68), (54799044483, 3),
           (3823756, 3), (59190483, 9), (29215, 3), (164527, 9), (1084265499, 95), (38129448630, 3), (59718, 4),
           (4077364960, 750), (2770572, 69), (17410, 95), (77239042499, 1), (81373043628, 137), (166165512, 774),
           (4896379, 79), (651094471, 169), (5472, 54), (285154359, 1), (690866, 6), (3654717, 1), (2554, 3),
           (63504826, 11), (490380, 4), (515002, 9), (1799417, 23), (16045156, 68), (573128, 93), (215, 2), (8533, 74),
           (2479288, 1), (180, 8), (147162, 39), (468875116861, 6), (3311200534934, 4), (221023578957, 79),
           (89167777, 7), (86, 3), (9018482322, 8), (52528006782, 280), (50923183, 3), (101886523, 233),
           (15893386550, 934), (944364960110, 8), (1085213878, 9), (1802836567, 7), (15118, 5), (15728327, 3),
           (84682754, 443), (314156893092, 4), (19960559, 4), (20387985, 66), (1408511278, 75), (24867038, 77),
           (770176, 9), (520247740, 8), (175203510, 8), (32112303578, 2), (386657724, 495), (60798496056, 4),
           (6670531506, 66), (7530690180, 888), (111271709255, 61), (281328723, 42), (113699319, 687), (178497713, 8),
           (1375632, 7), (3185, 22), (2999300, 3), (6245329184, 754), (1847269296846, 36), (42670197, 69),
           (97086395, 20), (715446, 8), (222978467823, 371), (29131007, 4), (312956345, 6), (14626461, 7), (221314, 22),
           (2982391374749, 745), (456497, 4), (128198, 4), (168881123806, 9), (18916851, 6), (666054453, 98),
           (15291130, 509), (1603, 76), (246957404, 1), (149364251534, 7), (1844736101, 7), (16803311, 9),
           (329472363, 35), (2066258, 9), (374342, 8), (986026811, 957), (1371142030, 1), (203584, 14), (83917, 8),
           (28649, 876), (780465233967, 10), (373350043, 4), (635778015, 908), (5531081, 8), (4105493, 4), (787555, 4),
           (27534575, 7),
           }


def pad_for(n):
    pad = 10
    while n >= pad:
        pad *= 10
    return pad


def run(lines):
    total = 0

    for line in lines:
        values = re.findall(r'\d+', line)
        result, operands = int(values[0]), tuple(map(int, values[1:]))

        # optimization for quick tests
        if (result, operands[0]) in ignored:
            continue

        op_arrangements = itertools.product(('*', '+', '||'), repeat=len(operands) - 1)

        for arrangement in op_arrangements:
            acc = operands[0]

            for i in range(len(arrangement)):
                if arrangement[i] == '+':
                    acc += operands[i + 1]
                elif arrangement[i] == '*':
                    acc *= operands[i + 1]
                else:
                    acc = acc * pad_for(operands[i + 1]) + operands[i + 1]

            if acc == result:
                total += result
                break

    return total


if __name__ == '__main__':
    print(run(get_lines('example.txt')))
    print(run(get_input_for_day('d7')))
